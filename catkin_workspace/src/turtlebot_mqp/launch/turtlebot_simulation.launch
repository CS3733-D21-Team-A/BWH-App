<launch>
  <arg name="gui"        default="true"/>
  <arg name="world_file" default="$(find map2gazebo)/worlds/map.sdf"/>
  <arg name="map_file"   default="$(find turtlebot_mqp)/maps/ll1_cleaned.yaml"/>
  <arg name="base"       value="kobuki"/>
  <arg name="stacks"     value="hexagons"/>
  <arg name="3d_sensor"  value="kinect"/>
  <arg name="debug" default="false"/>
  <arg name="headless" default="false"/>

  <env name="GAZEBO_MODEL_PATH" value="$(find map2gazebo)/models:$(optenv GAZEBO_MODEL_PATH)" />

  <arg name="initial_pose_x" default="213"/>
  <arg name="initial_pose_y" default="-105"/>
  <arg name="initial_pose_a" default="0.0"/>

<!--  ***************** Gazebo World *****************  -->

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="world_name" value="$(find map2gazebo)/worlds/map.sdf"/>
  </include>

<!--  ***************** Robot Model *****************  -->

  <include file="$(find turtlebot_mqp)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

 <!--  ************** Navigation  ***************  -->
  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/>

  <!--  ****** Maps *****  -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">
    <param name="frame_id" value="/map"/>
  </node>

  <include file="$(find turtlebot_navigation)/launch/includes/amcl/amcl.launch.xml">
    <arg name="scan_topic" value="scan"/>
    <arg name="use_map_topic" value="true"/>
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>

  <include file="$(find video_stream_opencv)/launch/webcam.launch">
  </include>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>

<!--  **************** Visualisation ****************  -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot_mqp)/rviz/robot_navigation.rviz"/>

    <node pkg="pose_translate" type="poseTranlate.python" name="check_odometry" />
    <!--node pkg="pose_translate" type="driveController.python" name="drive_controller" /--> 
    <!--node pkg="pose_translate" type="infoRelay.python" name="drive_status_node" /--> 

</launch>

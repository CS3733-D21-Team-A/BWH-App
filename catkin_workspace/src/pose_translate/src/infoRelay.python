#! /usr/bin/env python

import rospy
import string
import actionlib
from nav_msgs.msg import Odometry
from tf.transformations import *
from std_msgs.msg import *
from geometry_msgs.msg import PoseStamped, PoseWithCovarianceStamped
from move_base_msgs.msg import *
import math


class infoRelay:

    def __init__(self):
        rospy.init_node('drive_status_node', anonymous=True)
        #dir_sub = rospy.Subscriber('/chatter', String, self.parseDir)
        self.info_pub = rospy.Publisher('/infoRelay_string', String, queue_size = 5)
        move_base_result = rospy.Subscriber('/move_base/result',MoveBaseActionResult, self.progressToNext)
        yolo_sub = rospy.Subscriber('/yolo_info', String, self.yoloCallBack)
        self.rate = rospy.Rate(5)
        rospy.loginfo("infoRelay running")


    def progressToNext(self,msg):
        if msg.status.text == "Goal reached.":
            progress_message = "Reached current goal, progress to the next"
            print progress_message
            self.info_pub.publish(progress_message)

    def yoloCallBack(self,msg):
        print msg.data
        yolo_message = msg.data
        if msg.data == "person faraway":
            self.info_pub.publish(yolo_message)
        elif msg.data == "person back":
            self.info_pub.publish(yolo_message)

    def run(self):
        rospy.spin()

if __name__ == '__main__':
    inforelay = infoRelay()
    rospy.sleep(1)
    inforelay.run()